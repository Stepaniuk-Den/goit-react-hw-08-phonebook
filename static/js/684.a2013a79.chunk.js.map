{"version":3,"file":"static/js/684.a2013a79.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/FilterContact/FilterBar.styled.js","components/FilterContact/FilterBar.jsx","pages/Contacts.jsx","HOC/withAuthRedirect.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  width: 100%;\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    font-size: 20px;\n    width: 100%;\n  }\n\n  & input {\n    margin-top: 20px;\n    width: 100%;\n    border: 1px solid #ddd;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n  }\n\n  & button {\n    margin-top: 20px;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    background-color: white;\n    color: black;\n    font-size: 16px;\n    cursor: pointer;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n    transition: all 0.3s ease-in-out;\n    scale: 1;\n    &:hover {\n      background-color: #777;\n      color: white;\n      box-shadow: inset rgba(255, 255, 255, 0.25) 0px 14px 28px,\n        inset rgba(255, 255, 255, 0.22) 0px 10px 10px;\n      scale: 1.2;\n      translate: 10px;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledForm } from './ContactForm.styled';\n\nexport const ContactForm = ({ onAddContact, onDublicate }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactData = { name, number };\n    const isDublicate = onDublicate(name);\n    isDublicate\n      ? alert(`Attention! Name ${name} is already!`)\n      : onAddContact(contactData);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          onChange={onInputChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </StyledForm>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  onDublicate: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  margin-top: 20px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: inset rgba(0, 0, 0, 0.25) 0px 14px 28px,\n    inset rgba(0, 0, 0, 0.22) 0px 10px 10px;\n  & h2 {\n    font-size: 2rem;\n    margin: 10px 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection } from './Section.styled'\n\nconst Section = ({title, children}) => {\n  return (\n    <StyledSection>\n      {title && <h2 className = \"h2\">{title}</h2>}\n      {children}\n    </StyledSection>\n  )\n}\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n}\nexport default Section","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  width: 100%;\n  & li {\n    display: flex;\n    margin: 10px 0;\n    font-size: 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledContact = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  & button {\n    margin-top: 20px;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    background-color: white;\n    color: black;\n    font-size: 16px;\n    cursor: pointer;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n    transition: all 0.3s ease-in-out;\n    scale: 1;\n    &:hover {\n      background-color: #777;\n      color: white;\n      box-shadow: inset rgba(255, 255, 255, 0.25) 0px 14px 28px,\n        inset rgba(255, 255, 255, 0.22) 0px 10px 10px;\n      scale: 1.2;\n      translate: -7px;\n    }\n  }\n\n  & span {\n    margin-top: 20px;\n    border: 1px solid #ddd;\n    width: 80%;\n    padding: 3px 0 3px 5px;\n    font-size: 18px;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledContact } from './Contact.styled';\n\nconst Contact = ({ contact, onRemoveContact }) => {\n  return (\n    <StyledContact>\n      <span>\n        {contact.name} : {contact.number}\n      </span>\n      <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n        Delete\n      </button>\n    </StyledContact>\n  );\n};\nContact.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n}.isRequired;\nexport default Contact;\n\n// import React from 'react';\n// import { useDispatch } from 'react-redux';\n// import { addContact } from 'redux/contactsOperations';\n// import Button from '@mui/material/Button';\n\n// const AddContactForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n\n//     const elements = evt.currentTarget.elements;\n\n//     const name = elements.contactName.value;\n\n//     const number = elements.contactNumber.value;\n\n//     dispatch(addContact({ name, number }));\n//     evt.currentTarget.reset();\n//   };\n\n//   return (\n//     <div>\n//       <h2>Add contact</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           <b>Name: </b>\n//           <input type=\"text\" name=\"contactName\" required />\n//         </label>\n\n//         <label>\n//           <b>Number: </b>\n//           <input type=\"text\" name=\"contactNumber\" required />\n//         </label>\n\n//         <Button type=\"submit\" variant=\"contained\">\n//           Add contact\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledContactList } from './ContactList.styled';\nimport Contact from 'components/Contact/Contact';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <StyledContactList>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <Contact\n              key={contact.id}\n              contact={contact}\n              onRemoveContact={onRemoveContact}\n            />\n          );\n        })}\n    </StyledContactList>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledFilterBar = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  font-size: 20px;\n  width: 100%;\n\n  & input {\n    margin-top: 20px;\n    border: 1px solid #ddd;\n    width: 100%;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledFilterBar } from './FilterBar.styled';\n\nexport const FilterBar = ({ filter, onFilter }) => {\n  const handleInputChange = event => {\n    onFilter(event.target.value);\n  };\n\n  return (\n    <StyledFilterBar>\n      Find contact by name\n      <input\n        onChange={handleInputChange}\n        type=\"text\"\n        name=\"search\"\n        value={filter}\n      />\n    </StyledFilterBar>\n  );\n};\n\nFilterBar.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n}.isRequired;\n","import React, { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport Section from 'components/Section/Section';\nimport ContactList from 'components/ContactList/ContactList';\nimport { FilterBar } from 'components/FilterContact/FilterBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contactsReducer';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contactsOperations';\nimport Loader from 'components/Loader/Loader';\nimport withAuthRedirect from 'HOC/withAuthRedirect';\n\nexport const Contacts = () => {\n  const userData = useSelector(state => state.user.userData);\n  const filter = useSelector(state => state.phonebook.filter);\n  const selectContacts = useSelector(state => state.phonebook.contacts);\n  const isLoading = useSelector(state => state.phonebook.isLoading);\n  const error = useSelector(state => state.phonebook.error);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userData) return;\n\n    dispatch(fetchContacts());\n  }, [dispatch, userData]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  const onAddContact = contactData => {\n    dispatch(addContact(contactData));\n  };\n\n  const onDublicate = dublicated => {\n    const dublicate = selectContacts.filter(\n      contact => contact.name === dublicated\n    );\n    return dublicate.length > 0;\n  };\n\n  const onFilter = filterValue => {\n    dispatch(filterContact(filterValue));\n  };\n\n  const onRemoveContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filteredContact = selectContacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  const showLoader = isLoading;\n  const showError = error;\n\n  return (\n    <div className=\"container\">\n      {showError && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {showLoader && <Loader />}\n      <Section title=\"Phonebook\">\n        <ContactForm onAddContact={onAddContact} onDublicate={onDublicate} />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterBar filter={filter} onFilter={onFilter} />\n        <ContactList\n          contacts={filteredContact}\n          onRemoveContact={onRemoveContact}\n        />\n      </Section>\n    </div>\n  );\n};\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import Loader from 'components/Loader/Loader';\n\n// import withAuthRedirect from 'HOC/withAuthRedirect';\n// import AddContactForm from 'components/Contact/Contact';\n// import { deleteContact, fetchContacts } from 'redux/contactsOperations';\n\n// const Contacts = () => {\n//   const dispatch = useDispatch();\n//   const userData = useSelector(state => state.user.userData);\n//   const contacts = useSelector(state => state.phonebook.contacts);\n//   const isLoading = useSelector(state => state.phonebook.isLoading);\n//   const error = useSelector(state => state.phonebook.error);\n\n//   useEffect(() => {\n//     if (!userData) return;\n\n//     dispatch(fetchContacts());\n//   }, [dispatch, userData]);\n\n//   const handleDeleteContact = contactId => {\n//     dispatch(deleteContact(contactId));\n//   };\n\n//   const showContacts = Array.isArray(contacts) && contacts.length > 0;\n//   const showEmptyContactsMessage =\n//     Array.isArray(contacts) && contacts.length === 0 && !isLoading;\n//   return (\n//     <div>\n//       <h1>Contacts</h1>\n//       <AddContactForm />\n//       {isLoading && <Loader />}\n//       {error && <p>{error}</p>}\n//       <ul>\n//         {showContacts &&\n//           contacts.map(contact => {\n//             return (\n//               <li key={contact.id}>\n//                 <p>\n//                   <b>{contact.name}</b> : {contact.number}{' '}\n//                   <button\n//                     disabled={isLoading}\n//                     onClick={() => handleDeleteContact(contact.id)}\n//                   >\n//                     &times;\n//                   </button>\n//                 </p>\n//               </li>\n//             );\n//           })}\n//       </ul>\n//       {showEmptyContactsMessage && (\n//         <h2>There are no contacts added to your list!</h2>\n//       )}\n//     </div>\n//   );\n// };\n\nexport default withAuthRedirect(Contacts);\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst withAuthRedirect = SomeComponent => {\n  const PrivateComponent = props => {\n    const userData = useSelector(state => state.user.userData);\n\n    return userData ? (\n      <SomeComponent {...props} />\n    ) : (\n      <Navigate replace={true} to={'/login'} />\n    );\n  };\n\n  return PrivateComponent;\n};\n\nexport default withAuthRedirect;\n"],"names":["StyledForm","styled","ContactForm","onAddContact","onDublicate","useState","name","setName","number","setNumber","onInputChange","e","target","value","onSubmit","preventDefault","contactData","alert","onChange","type","pattern","title","required","StyledSection","children","className","StyledContactList","StyledContact","contact","onRemoveContact","onClick","id","contacts","showContacts","Array","isArray","length","map","StyledFilterBar","FilterBar","filter","onFilter","event","Contacts","userData","useSelector","state","user","phonebook","selectContacts","isLoading","error","dispatch","useDispatch","useEffect","fetchContacts","filteredContact","toLowerCase","includes","trim","showLoader","showError","Loader","addContact","dublicated","filterValue","filterContact","contactId","deleteContact","SomeComponent","props","replace","to"],"sourceRoot":""}